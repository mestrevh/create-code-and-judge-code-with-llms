Título: A Fuga IV
Topicos do problema: array bidimensional; recursão; 
Descrição: <p style="text-align: center;"><b>(se você ainda não fez as versões anteriores da questão A Fuga, não comece por essa)</b></p><p>...Moscou então pergunta a cada refém na mesa quantas pessoas ele sabia que estavam falando a verdade, e então ele anota as respostas em um papel para ver se a informação é verdadeira ou todos estão mentindo para ele.</p><p>Após perguntar a todos, ele descobre que os reféns tinham cavado diferentes direções no túnel, e percebe que deveria descobrir qual seria a certa a seguir. Moscou já estava muito cansado com toda essa história e decide lhe pedir para criar um programa para descobrir se os reféns estão falando a verdade ou se todos estão mentindo. Caso algum deles esteja falando a verdade, ele também lhe pede para que ache no labirinto a saída correta para que possam escapar da casa da moeda. O problema é que com todo esse tempo para achar a solução da saída dos túneis, os reféns cavaram túneis muito grandes e agora podem ultrapassar o tamanho máximo de 10x10.</p><p>Os reféns mentirosos, insatisfeitos com a demora, decidiram criar buracos e sub-túneis que funcionavam como portais dentro dos túneis, por exemplo, se eles entrassem nesses portais eles seriam direcionados para outras partes do túnel. Cada portal era representado por um número maior que 1, sendo assim, se no labirinto dos túneis houver um 2, deverá haver outro 2 para mostrar onde aquele portal estará lhe levando (ele funciona em ambos os sentidos).</p><p>Moscou ao descobrir isso decide que iria punir os reféns que estavam mentindo para cada portal que ele utilizasse, sendo assim, ele não poderia usar um número de portais acima da quantidade de reféns que mentiram pra ele. Ou também, ele pode decidir simplesmente ignorar esse portal e usar como um caminho comum.</p><p><span>Para sair do túnel você sempre começará na célula [0][0] (entrada do túnel) e deverá atingir a [N-1][M-1] (saída do túnel), pode não haver caminho até a saída, para isso o programa estando em uma célula deverá checar a saída, mas cuidado para não se perder... pode seguir em qualquer direção (vertical e horizontal, não diagonais).</span></p><p><b>OBS:</b></p><p></p><ul><li><b>É obrigatório o uso de recursão para resolução da questão.</b></li></ul><p></p>
Formato da entrada: <p><br/>A entrada consiste em uma linha no formato:</p><blockquote><p><b>N</b></p></blockquote><p><span>N - numero de reféns que trabalharam no túnel e estão na conversa com Moscou</span></p><p><span>Seguido de de uma linha com N números separados por espaço</span><span>:</span></p><blockquote><p><span><b>X1 X2 X3 ... Xn</b></span></p></blockquote><p><span>Xi - representa a quantidade de pessoas que o i-ésimo refém alega estarem falando a verdade.</span></p><p><span>Seguidos de uma linha no formato:</span></p><blockquote><p><span><b>N M</b></span></p></blockquote><p><span>N e M - números naturais representando o tamanho da matriz</span></p><p><span>Depois disso, deverá ser entregue uma matriz NxM representando uma visualização das configurações do túnel. A matriz poderá ser composta de números naturais, sendo:</span></p><ul><li><span>0 - paredes</span></li><li><span>1 - os túneis</span></li><li><span>X &gt; 1 - portais</span></li></ul>
Formato da saída: <p>Após a checagem se algum refém está falando a verdade deverá ser impresso:</p><blockquote><p><b>&#34;Vamo nessa, temos que sair rapido...&#34;</b></p></blockquote><p>OU, caso todos os reféns estejam mentindo:</p><blockquote><p><b>&#34;Ja nao se pode confiar nos refens como antigamente...&#34;</b></p></blockquote><p>Caso algum refém esteja falando a verdade sobre a saída do túnel, o programa deverá testar se realmente há saída e imprimir uma linha única contendo:</p><blockquote><p><b>&#34;Tudo nosso&#34;</b></p></blockquote><p>OU</p><blockquote><p><b>&#34;Continuem cavando!&#34;</b></p></blockquote><p>Caso não tenha um caminho que leve à saída ou não seja possível chegar até ela.<br/></p>
