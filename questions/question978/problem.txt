Título: Mais um problema de logística
Topicos do problema: requer solução eficiente; 
Descrição: <p>Uma empresa de logística possui vários armazéns espalhados por diversos pontos do mapa. O gerente de operações precisa visitar diariamente todos os armazéns, regressando finalmente ao seu escritório, localizado no armazém #0.<br/>Cansado de fazer o percurso de maneira ineficiente, e satisfeito com a solução dada a um problema anterior de circulação de mercadorias, ele decide encomendar ao departamento de informática um programa que permita calcular o circuito de menor comprimento total e que visita cada armazém exatamente uma vez.  <br/><br/>O gerente pode deslocar-se de qualquer armazém a qualquer outro. A distância entre armazéns é estimada como sendo a soma das diferenças absolutas entre as suas respectivas latitudes e longitudes. Mais formalmente, se um ponto A tem coordenadas (Xa, Ya) e um ponto B tem coordenadas (Xb, Yb), então o custo de operar uma linha entre A e B será dado por |Xa - Xb| + |Ya - Yb|.<br/><br/>Dessa vez, entretanto, os programadores da empresa estão com alguma dificuldade em resolver o problema de maneira exata e eficiente. Eles conseguiram, entretanto, elaborar as três soluções detalhadas a seguir:<br/><br/>A) A primeira solução consiste em iniciar no armazém 0 e, a partir daí, escolher sempre o armazém não-visitado mais próximo. Em caso de empate, escolher o armazém de menor número.<br/><br/>B) A segunda solução consiste em escolher progressivamente os armazéns a serem visitados: A[0]=0 -&gt; A[1]-&gt; A[2] ... -&gt; A[n-1] -&gt; A[0]=0. Em cada momento, na escolha do k-ésimo armazém, uma cota inferior para o menor circuito que começa com aqueles k armazéns pode ser estimada somando-se a esse trajeto escolhido, a metade da soma total, para cada um dos armazéns restantes, das duas menores distâncias a quaisquer dos seus vizinhos. Se essa cota inferior for maior ou igual à melhor solução conhecida até aquele instante, essa escolha pode ser abandonada e o próximo valor possível para A[k] deve ser considerado. <br/><br/>C) O terceiro programa usa parte da solução para o tal problema anterior de circulação de mercadorias. Primeiro, uma MST é calculada utilizando-se o Alg. de Prim iniciado no armazém #0. Em caso de empate para a escolha do próximo trecho, deve-se escolher o que se inicia no armazém de menor número. Persistindo o empate, considera-se o menor número do segundo armazém. Em seguida, os armazéns são enumerados através de um percurso em profundidade da MST a partir do armazém 0 e, finalmente, os armazéns repetidos (com exceção do 0) são eliminados da enumeração. <br/></p>
Formato da entrada: <p>A entrada é constituída de vários casos, cada um correspondente a um cenário/mapa como descrito acima. A primeira linha contém um inteiro <br/><br/>L <br/><br/>representando o número de casos. A seguir, temos a especificação dos diversos casos.<br/>  <br/>Para cada mapa, temos inicialmente uma linha com um inteiro, <br/><br/>N<br/><br/>que indica a quantidade de armazéns.<br/>  <br/>As próximas N linhas contêm um par de inteiros cada<br/><br/>X[i] Y[i]<br/><br/>onde (X[i], Y[i]) é a coordenada do i-ésimo armazém, para i=0,..,.N-1.<br/><br/>Há uma linha em branco após cada caso.<br/><br/>Limites: <br/>3 &lt;= N &lt;= 15<br/>0 &lt;= X[i], Y[i] &lt;= 1000;<br/><br/></p>
Formato da saída: None
