Título: Heapsort
Topicos do problema: heap; dividir e conquistar; recursão; ordenação; 
Descrição: <div class="problem-description-header-container" style="color: rgb(0, 0, 0);background-color: rgb(255, 255, 255);"><div class="ng-binding"><p>O algoritmo Heapsort é um algoritmo de ordenação que funciona da seguinte forma: dada uma sequência de elementos em um array A (neste exercício, consideramos apenas números), primeiro é construída uma heap máxima (max-heap) com os elementos nas posições 1 a n, onde n é o tamanho original do array (vide exercício Construir Heap Máxima presente aqui no Huxley também). Ao construir esta max-heap, o primeiro elemento será o maior elemento de A, portanto podemos colocá-lo na posição n. Se removermos o nó n da heap - podemos fazê-lo simplesmente decrementando o tamanho da heap armazenada em A - observamos que os nós que são filhos da raiz continuam como max-heaps, mas o novo elemento na posição de raiz da heap em A pode estar violando a propriedade de max-heap. Portanto é necessário restaurar a propriedade max-heap, chamando a função MAX-HEAPIFY a partir da raiz, o que terá como resultado uma max-heap nas posições de 1 a n-1. O algoritmo heapsort repete este processo para a max-heap de tamanho 1:n-1, vide descrição do algoritmo abaixo: </p><title>Introduction to Algorithms, Third Edition</title><div class="page" title="Page 181"><div class="layoutArea"><div class="column"><p><img class="" src="https://thehuxley.com/api/v1/problems/image/9155e0ca2c233dba0e66adedb734b0705627013bt.png"/><br/></p></div></div></div><p>(fonte: Capítulo 6.4 do livro &#34;Introduction to Algorithms&#34;, por Cormen et al.)</p><p>Neste exercício, deve ser implementado o algoritmo Heapsort, ilustrando o passo a passo de execução do algoritmo, conforme detalhado no formato de entrada e saída abaixo.<br/></p></div></div><div class="problem-description-header-container" style="color: rgb(0, 0, 0);background-color: rgb(255, 255, 255);"></div>
Formato da entrada: <p>A entrada é constituída por uma linha contendo uma sequência de números a serem ordenados.</p>
Formato da saída: <p>A entrada deve ser impressa separada por barras verticais, como no exemplo. Após a construção da heap máxima, o estado inicial da heap deve ser exibido usando a mesma formatação. Para cada passo do algoritmo, a saída deve imprimir o elemento raiz da heap e o conteúdo da mesma entre barras verticais.Ao final da ordenação, deve ser impresso o resultado final da execução do algoritmo. </p>
