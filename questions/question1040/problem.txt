Título: Decifre o Eheapma
Topicos do problema: heap; 
Tempo limite de execução: 1 segundo(s)
Descrição: <div class="description" style="color: rgb(69, 69, 69);text-align: justify;background-color: rgb(255, 255, 255);"><p>A Segunda Guerra Algorítmica está espalhando destruição pela federação interplanetária e o eixo de planetas P=NP está dominando toda a galáxia. Algo precisa ser feito! Como um dos mais brilhantes programadores da aliança planetária P!=NP, você foi convidado para a equipe do mestre Allyan Turingobi, que tenta decifrar os segredos de uma das maiores armas dos P=NP: a máquina<span class="Apple-converted-space"> </span><em>Eheapma</em>! Ela é utilizada para enviar mensagens criptografadas contendo informações vitais das estratégias de combate inimigas. O mestre Allyan parece ter descoberto uma maneira de decifrar o código da Eheapma. Programá-la é sua missão.</p><p>Através de interceptação militar super avançada, descobriu-se o seguinte sobre o funcionamento da Eheapma:</p><ul><li>Todos os dias é passada uma nova reordenação do alfabeto A, que substitui a ordem lexicográfica usual definida em ASCII, ou seja, algarismos 0, 1, 2, …, 8, 9, seguidos por letras maiúsculas A, B, C, …, Y, Z, seguidas por  letras minúsculas a, b, c, …, y, z. Essa permutação é usada como base da encriptação.</li><li>A máquina transmite mensagens codificadas através de uma sequência de N instruções. Existem dois tipos de instrução:<ol><li>PUSH msg, onde msg é uma string com um trecho da mensagem codificada original;</li><li>POP M, onde  M é um inteiro.</li></ol></li></ul><p>A descodificação deve ser feita pelo receptor da seguinte maneira:</p><ul><li>A cada instrução PUSH msg recebida, os caracteres de msg devem ser armazenados seguindo uma relação de dominância definida por: A[i] ≺ A[j] ⇔ i &gt; j, onde ≺ é o símbolo que representa dominância, A é o alfabeto reordenado interceptado e i, j são inteiros representando os índices. </li><li>A cada instrução POP M recebida, os M caracteres com maior dominância dentre os armazenados devem ser removidos em sequência, um após o outro. Logo em seguida, esses M caracteres são passados pela famosa cifra ROT13 (utilizada na Roma Antiga como uma variação da Cifra de César) e depois impressos (https://upload.wikimedia.org/wikipedia/commons/2/2a/ROT13.png?raw=true).<br/><img alt="" src="https://upload.wikimedia.org/wikipedia/commons/2/2a/ROT13.png?raw=true" style="height: 251px;width: 400px;"/></li><li>O procedimento se repete até o fim das N instruções, quando temos a mensagem decifrada como resultado de cada linha de instrução POP.</li></ul><p><em>Observações</em>:</p><ol><li>A primeira instrução deve ser um PUSH. A partir daí, podem ser PUSH/POP em qualquer ordem.</li><li>A cada instrução POP M, M nunca será maior do que a quantidade de caracteres correntemente armazenados.</li><li>A cifra ROT13 não altera caracteres numéricos e preserva o caso dos caracteres alfabéticos (letras maiúsculas resultam em letras maiúsculas, e letras minúsculas resultam em letras minúsculas).</li></ol></div>
Formato da entrada: <p style="color: rgb(69, 69, 69);text-align: justify;background-color: rgb(255, 255, 255);">A primeira linha da entrada contém o alfabeto interceptado<span class="Apple-converted-space"> </span><strong>A</strong>, que consiste de números [0-9], letras maiúsculas [A-Z] e letras minúsculas [a-z], totalizando 62 caracteres únicos em ordem aleatória.</p><p style="color: rgb(69, 69, 69);text-align: justify;background-color: rgb(255, 255, 255);">A próxima linha contém um único inteiro<span class="Apple-converted-space"> </span><strong>N</strong> (0&lt;<strong>N</strong>&lt;2*10⁹) indicando o número de operações a serem feitas (uma por linha).</p><p style="color: rgb(69, 69, 69);text-align: justify;background-color: rgb(255, 255, 255);">As próximas<span class="Apple-converted-space"> </span><strong>N</strong> linhas contêm<span class="Apple-converted-space"> </span><em>uma</em> instrução cada, sendo de dois tipos possíveis, definidos acima:</p><ol style="color: rgb(69, 69, 69);text-align: justify;background-color: rgb(255, 255, 255);"><li>PUSH msg</li><li>POP M</li></ol><p style="color: rgb(69, 69, 69);text-align: justify;background-color: rgb(255, 255, 255);">Sendo<span class="Apple-converted-space"> </span><strong>msg</strong> uma string sem espaços ou caracteres especiais e<span class="Apple-converted-space"> </span><strong>M</strong><span class="Apple-converted-space"> </span>um inteiro positivo (0&lt;<strong>M</strong>&lt;2*10⁹).</p>
Formato da saída: <div class="output" style="color: rgb(69, 69, 69);text-align: justify;background-color: rgb(255, 255, 255);"><p>Para cada instrução POP<span class="Apple-converted-space"> </span><strong>M</strong><span class="Apple-converted-space"> </span>da entrada, deve ser impressa uma linha com<span class="Apple-converted-space"> </span><strong>M</strong><span class="Apple-converted-space"> </span>caracteres contendo a parte da mensagem decifrada.</p></div><div class="both" style="color: rgb(69, 69, 69);text-align: justify;background-color: rgb(255, 255, 255);"></div>
