Título: Diversão dinâmica
Topicos do problema: programação dinâmica; 
Descrição: <pre style="font-family: 'Helvetica Neue', Helvetica, sans-serif, Arial; overflow-x: auto; overflow-y: hidden; white-space: pre-wrap; word-wrap: break-word; padding: 0px; margin: 0px; font-size: 14px;">Um pai gostaria de levar seu filho ao parque de diversões e ocupá-lo o  maior tempo possível. Infelizmente, o pobre pai só dispõe de um cartão com um saldo limitado de K créditos, e que só permite utilizar cada brinquedo no máximo uma vez. 
Ajude-o a escolher os brinquedos para o seu filho.</pre>
Formato da entrada: <pre style="font-family: 'Helvetica Neue', Helvetica, sans-serif, Arial; overflow-x: auto; overflow-y: hidden; white-space: pre-wrap; word-wrap: break-word; padding: 0px; margin: 0px; font-size: 14px;">A primeira linha contem um número M correspondendo ao número de casos (1&lt;=M&lt;=500) seguida por uma linha em branco.

Em seguida, temos os diversos casos, cada um representado por 3 linhas na forma:

N K
c[1] c[2] ... c[N]
t[1] t[2] ... t[N]

onde
 
N (5&lt;=N&lt;=100) representa o número de brinquedos no parque, numerados de 1 a N
K (0&lt;=K&lt;=100000) representa o saldo inicial (em créditos) do cartão 
c[i] (5&lt;=c[i]&lt;=1000) representa o custo (em créditos) do brinquedo i 
t[i] (60&lt;=t[i]&lt;=360) representa o tempo (em segundos) do brinquedo i

Após cada caso, há uma linha em branco.</pre>
Formato da saída: <pre style="font-family: 'Helvetica Neue', Helvetica, sans-serif, Arial; overflow-x: auto; overflow-y: hidden; white-space: pre-wrap; word-wrap: break-word; padding: 0px; margin: 0px; font-size: 14px;">Para cada caso j no arquivo de entrada, o programa deve imprimir 3 linhas na forma:

brinquedos caso j: b[1] b[2] ... b[m] 
custo total caso j: C
tempo total caso j: T

onde 
1 &lt;= b[1] &lt; b[2] &lt; ... &lt; b[m] &lt;= N representam os números dos brinquedos escolhidos, separados por espaço, de forma que (i) o custo total não exceda os créditos do cartão e (ii) o tempo de brincadeira seja máximo.
C = c[b[1]] +...+ c[b[m]] representa o total de créditos gastos.
T = t[b[1]] +...+ t[b[m]] representa o tempo total de brincadeira.

Entretanto, caso não seja possível escolher nenhum brinquedo, deve ser impressa apenas uma linha com o conteúdo 

caso j: saldo insuficiente

Após cada caso, deve ser impressa uma linha em branco.

<strong>IMPORTANTE:</strong> 
Em caso de empate, deve-se dar preferência à sequência de brinquedos que contiver brinquedos de números mais altos (pois são mais emocionantes).  Por exemplo, uma sequência 1,3,8,9 deve ter preferência sobre uma sequência 1,4,5,6,7,9 (pois 9=9 e 8&gt;7), não importando se esta última tem mais brinquedos. Ou seja, o desempate dá-se sempre analisando as sequências da direita para a esquerda de maneira "gulosa" na emoção.</pre>
