Título: Batalha Naval Para Horas Vagas
Topicos do problema: array; ciclos; array bidimensional; 
Tempo limite de execução: 1 segundo(s)
Descrição: <b id="docs-internal-guid-477bcf16-7fff-8737-4cd6-0e6616280773"></b><p dir="ltr" style="text-align: justify;"><span style="color: #000000;background-color: transparent;">Dois amigos estavam a caminho das suas aulas no CIn quando receberam uma notificação do classroom avisando que a aula para a qual estavam indo não iria acontecer hoje. No entanto, eles ainda teriam uma aula mais tarde, significando então um horário vago. Como alunos extremamente responsáveis, aproveitaram o horário para revisar os assuntos… ou ao menos isso é o que eles queriam dizer que fizeram. Não, eles só foram jogar alguma coisa mesmo.</span></p><br/><p dir="ltr" style="text-align: center;"><span style="color: #000000;background-color: transparent;"><span style="width: 238px;height: 254px;"><img src="https://lh5.googleusercontent.com/KT-1tkG2X3JFIa5dOpV1ovJSjsVa687CEQNjj6YZ2V86inm_mqb0RY2UUwJK0OwXbKwTDS0Wx2cf1qgNgN1yh0E97izwzOgKnzOnDhi2NuVxRBWuU7jv-5ZBWyVxBnjFvo4fAhLdb-DbIyX295qOAX8" width="238" height="254"/></span></span></p><br/><p dir="ltr" style="text-align: justify;"><span style="color: #000000;background-color: transparent;">O jogo escolhido pelos dois foi uma versão simplificada de uma batalha naval. Um dos jogadores irá escolher uma quantidade determinada de quadrados para posicionar os seus “navios”. Após os navios estarem posicionados, o outro jogador terá um total de ataques igual ao dobro da quantidade de navios, e para ser o vencedor ele terá que acertar todos os navios do oponente dentro dessa quantidade de tentativas.</span></p><p dir="ltr" style="text-align: justify;"><span style="color: #000000;background-color: transparent;">E aqui entra você! Faça um programa para receber o tabuleiro montado pelo jogador de defesa e os ataques realizados e, a partir disso, determine quem saiu como vencedor!</span></p>
Formato da entrada: <p><span id="docs-internal-guid-9f4651f0-7fff-a936-ef1e-5da550f62381"><span style="color: rgb(0, 0, 0);background-color: transparent;">O seu programa irá primeiro receber um inteiro </span><span style="color: rgb(0, 0, 0);background-color: transparent;"><b>n</b></span><span style="color: rgb(0, 0, 0);background-color: transparent;"> que irá determinar o tamanho tabuleiro, que será por sua vez<b> </b></span><b><span style="color: rgb(0, 0, 0);background-color: transparent;">n</span><span style="color: rgb(0, 0, 0);background-color: transparent;"> </span><span style="color: rgb(0, 0, 0);background-color: transparent;">*</span><span style="color: rgb(0, 0, 0);background-color: transparent;"> </span></b><span style="color: rgb(0, 0, 0);background-color: transparent;"><b>n</b></span><span style="color: rgb(0, 0, 0);background-color: transparent;">. Em seguida, receberá também um número</span><span style="color: rgb(0, 0, 0);background-color: transparent;"> <b>k</b> </span><span style="color: rgb(0, 0, 0);background-color: transparent;">que irá determinar a quantidade de navios presentes no tabuleiro. Logo após, uma matriz binária de tamanho<b> </b></span><span style="color: rgb(0, 0, 0);background-color: transparent;"><b>n * n</b> </span><span style="color: rgb(0, 0, 0);background-color: transparent;">será enviada, em que “1” representa a presença de navios e “0” a ausência. Por fim, um total de </span><span style="color: rgb(0, 0, 0);background-color: transparent;"><b>2 * k</b> </span><span style="color: rgb(0, 0, 0);background-color: transparent;">coordenadas serão enviadas para indicar as posições em que houve ataque.</span></span><br/></p>
Formato da saída: <b id="docs-internal-guid-57d8869f-7fff-1161-ed51-d31f59450a03"></b><p dir="ltr"><span style="color: #000000;background-color: transparent;">O seu programa irá possuir 4 possíveis saídas. </span><span style="color: #000000;background-color: transparent;">Todas </span><span style="color: #000000;background-color: transparent;">as entradas irão se enquadrar em um destes 4 casos, então não se preocupe com outras possibilidades. Vamos explicar cada uma.</span></p><br/><ol><li dir="ltr" style="color: #000000;background-color: transparent;"><p dir="ltr"><span style="color: #000000;background-color: transparent;">Caso a quantidade de navios presentes no tabuleiro seja </span><span style="color: #000000;background-color: transparent;">maior</span><span style="color: #000000;background-color: transparent;"> que a quantidade correta, o seu programa deve printar “</span><span style="color: #000000;background-color: transparent;">Defesa invalida!</span><span style="color: #000000;background-color: transparent;">”.</span></p></li><li dir="ltr" style="color: #000000;background-color: transparent;"><p dir="ltr"><span style="color: #000000;background-color: transparent;">Caso algum ataque seja feito fora dos limites do tabuleiro, o seu programa deve printar “</span><span style="color: #000000;background-color: transparent;">Ataque invalido!</span><span style="color: #000000;background-color: transparent;">”.</span></p></li><li dir="ltr" style="color: #000000;background-color: transparent;"><p dir="ltr"><span style="color: #000000;background-color: transparent;">Dado que a defesa e o ataque são válidos, caso o jogador atacando seja capaz de destruir todos os navios, o seu programa deve printar “</span><span style="color: #000000;background-color: transparent;">Ataque venceu!</span><span style="color: #000000;background-color: transparent;">”.</span></p></li><li dir="ltr" style="color: #000000;background-color: transparent;"><p dir="ltr"><span style="color: #000000;background-color: transparent;"><span style="background-color: transparent;color: rgb(0, 0, 0);">Dado que a defesa e o ataque são válidos, caso o jogador atacando não consiga destruir todos os navios, o seu programa deve printar “</span><span style="background-color: transparent;color: rgb(0, 0, 0);">Defesa venceu!</span><span style="background-color: transparent;color: rgb(0, 0, 0);">”.</span></span></p></li></ol>
