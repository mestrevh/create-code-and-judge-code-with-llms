Título: L5Q6 - Together
Topicos do problema: grafo; decisão; recursão; 
Tempo limite de execução: 1 segundo(s)
Descrição: <p>Troy e Gabriella têm a chance de provar seu valor em suas próprias áreas de atuação: Gabriella, em sua competição de conhecimentos gerais e Troy na grande final do campeonato estadual de basquete. Após uma maravilhosa vitória de ambos, todos do colégio decidiram celebrar juntos, em uma grande apresentação em conjunto, na qual diversos alunos participarão. Pórem, visto que tudo foi decidido em cima da hora, eles ficaram com certa dúvida de que essa grande ideia daria certo, contudo, lá estava você, mais uma vez para salvar o dia e criar um programa capaz de criar soluções convinientemente perfeitas!<br/></p><p><br/></p><p>Dessa vez, o problema é que visto que tantas pessoas estariam envolvidas na apresentação, o fato deles apenas possuírem um microfone disponível para todos é muito preocupante. Será necessário, durante a apresentação, que o microfone seja passado de mão em mão, entre todos os alunos, para que tudo vá como planejado. Logo, te pedem para checar se seria possível, dado para quais pessoas cada aluno consegue passar o microfone para devido a distância, que todos os que se apresentarão usem o microfone.<br/></p><p><br/></p><p style="text-align: center;"><img src="https://media1.tenor.com/images/a4c346ede7ad5d662b671ffc114ab3aa/tenor.gif?itemid=4630028" alt="High School Musical GIF - High School Musical GIFs"/><br/></p><p style="text-align: center;"><br/></p><p style="text-align: center;"><br/></p><p>Você decide aceitar o desafio e descobrir se existe alguma forma do microfone começar com o cantor inicial, e acabar com o final, ambos serão informados pela entrada do programa.</p><p><br/></p><p><b>DICAS DE RESOLUÇÃO (se quiser fazer &#34;modo hard&#34;, não precisa ler, vai na fé que dá certo) :)</b></p><p>Por exemplo, imaginemos a seguinte entrada:</p><blockquote><h5><span>4 4</span><br/></h5><h5>Troy</h5><h5>Sharpay</h5><h5>Gabriela</h5><h5>Ryan</h5><h5>0 1</h5><h5>0 2</h5><h5>1 2</h5><h5>2 3</h5><h5>Sharpay</h5><h5>Ryan</h5></blockquote><p>Podemos extrair as seguintes informações:</p><ul><li>Troy pode passar o microfone para: Sharpay e Gabriela.</li><li>Sharpay pode passar o microfone para: Gabriela.</li><li>Gabriela pode passar o microfone para: Ryan.</li><li>Ryan não pode passar para ninguém.</li><li>O microfone iniciará nas mãos de Sharpay e deverá chegar na de Ryan.</li></ul><p>Nesse caso é possível, pois o microfone pode seguir o caminho: Sharpay -&gt; Gabriela -&gt; Ryan.<br/></p><p><span><br/></span></p><p><font face="inherit">Para </font>armazenar<font face="inherit"> as relações entre as pessoas que irão passar os microfones você pode utilizar uma dessas duas lógicas:</font></p><p><b>Dica 1: </b>Você poderá criar um array bidimensional de tamanho NxN onde a posição 0 do primeiro array corresponda a primeira pessoa a ser inserida na entrada e os elementos dentro do array (da posição 0) correspondam aos respectivos colegas para os quais a pessoa 0 pode passar o microfone, representados também por números. (note que ao utilizar essa solução, antes de alterar colocar os valores foi definido que todos os slots do array teriam valor -1, para diferenciar da pessoa 0). Após criada a estrutura, ela deverá parecer com algo dessa forma:<br/></p><p style="text-align: center;"><img src="https://www.thehuxley.com/api/v1/problems/image/8afcf605ed54fc4115df999f0d150db458f6b564a.png"/><br/></p><p><br/></p><p><b>DICA 2:</b> Outra opção é criar uma matriz de adjacência, é bem parecido com o exemplo anterior. Você deverá criar um array bidimensional de tamanho NxN que armazena valores booleanos (true ou false), para cada slot da matrizAjdacencia[i][j] indicará se a pessoa <i><b>i</b></i> possui uma conexão para a pessoa <i><b>j</b></i>, caso o valor true esteja armazenado, desse modo significa que a pessoa <i><b>i</b></i> poderá passar o microfone para a pessoa<i> <b>j</b></i>. Caso o valor armazenado seja falso, indica que ali não há uma conexão entre <i><b>i</b> </i>e<i> <b>j</b>.</i><br/></p><p style="text-align: center;"><img src="https://www.thehuxley.com/api/v1/problems/image/38e7593889ddafd98ef1c36c2679d7e48655abd7a.png"/><br/></p><p><br/></p><p>Após armazenados os dados, basta criar um método recursivo que consiga transitar por essas conexões criadas, indo de pessoa para pessoa até que seja atingido o seu destino final.</p>
Formato da entrada: <blockquote><p><b>N M</b></p></blockquote><p>Números naturais correpondendo a quantidade de pessoas que participarão da apresentação e também a quantidade de conexões a serem informadas.</p><p><br/></p><p>Seguido de linhas no formato:</p><blockquote><p><b>Nome0</b></p><p><b>Nome1</b></p><p><b>...</b></p><p><b>NomeN</b></p></blockquote><p><br/></p><p><b>OBS: </b> Para as próximas informações da entrada, considere que a primeira que foi fornecida pela entrada tem como associação o número 0, a segunda como número 1 e assim por diante até N-1.</p><p><br/></p><p>Seguido de M linhas no formato</p><blockquote><p><b>I J</b></p></blockquote><p>Em que I corresponde a I-ésima pessoa e J o número da pessoa para qual ela pode passar o microfone (o inverso não é verdade, obrigatoriamente).</p><p><br/></p><p>Após, deverá ser informado com quem irá começar e acabar o microfone, respectivamente, no formato:</p><blockquote><p><b>A</b></p><p><b>B</b></p></blockquote><p>Em que A corresponde ao nome da pessoa que irá iniciar cantando e B o nome da última pessoa a receber o microfone.</p>
Formato da saída: <p>Caso o seja possível o microfone chegar ao cantor final, deverá ser impressa a seguinte frase:</p><blockquote><p><b>&#34;We're all in this together!&#34;</b></p></blockquote><p><br/></p><p>Caso contrário:</p><blockquote><p><b>&#34;Mentira, nenhum filme da Disney da errado, nunca.&#34;</b></p></blockquote>
