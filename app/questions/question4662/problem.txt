Título: Victor Hugo e a Task Final
Topicos do problema: maratona; 
Tempo limite de execução: 3 segundo(s)
Descrição: <p><b id="docs-internal-guid-db646338-7fff-224f-4bf8-887fa6b95a87"></b></p><p dir="ltr"><span style="color: #000000;background-color: transparent;"></span></p><b id="docs-internal-guid-455d7c3b-7fff-0cb9-dc3c-cc0549b06e03"></b><p dir="ltr"><span style="color: #000000;background-color: transparent;"><b></b></span></p><b id="docs-internal-guid-36f19da6-7fff-6984-4994-4d209a9e21e3"></b><p dir="ltr"><span style="background-color: transparent;color: rgb(0, 0, 0);">Victor Hugo é um dos principais engenheiros de sistemas da AWS, a gigante da tecnologia responsável por hospedar bilhões de serviços. Durante a preparação para um dos maiores eventos do ano, a <b>Black Friday</b>, uma falha inesperada no sistema gerou duplicações de intervalos críticos na configuração dos servidores, levando a resultados inconsistentes e prejudicando milhões de transações. Como ele não tem muita experiência nessa área, decidiu chamar você para ajudá-lo. Pode ajudá-lo com isso?</span><br/></p><p dir="ltr"><span style="color: #000000;background-color: transparent;"></span></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">A infraestrutura é representada por uma sequência de servidores </span><span style="color: #000000;background-color: transparent;"><b>a = (a1, a2, ..., aN)</b>,</span><span style="color: #000000;background-color: transparent;"> inicialmente configurados com o valor 0. Para modificar essa configuração, Victor tem </span><span style="color: #000000;background-color: transparent;"><b>M</b> </span><span style="color: #000000;background-color: transparent;">intervalos</span><span style="color: #000000;background-color: transparent;"> <b>[L1, R1], [L2, R2], ..., [LM, RM]</b></span><span style="color: #000000;background-color: transparent;"> e uma restrição de C cores possíveis para os servidores.</span></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">Victor precisa realizar</span><span style="color: #000000;background-color: transparent;"> M</span><span style="color: #000000;background-color: transparent;"> modificações, onde:</span></p><ul><li dir="ltr" style="color: #000000;background-color: transparent;"><p dir="ltr"><span style="color: #000000;background-color: transparent;">Ele pode escolher uma permutação <b>p</b> de <b>{1, 2, ..., M}</b>, definindo a ordem de aplicação dos intervalos.</span></p></li><li dir="ltr" style="color: #000000;background-color: transparent;"><p dir="ltr"><span style="color: #000000;background-color: transparent;">Ele também escolhe uma sequência w = <b>(w1, w2, ..., wM)</b>, onde cada <b>wi (1 ≤ wi ≤ C) </b>representa a cor aplicada ao intervalo<b> [Lp(i), Rp(i)].</b></span></p></li></ul><p dir="ltr"><span style="color: #000000;background-color: transparent;">Na i-ésima modificação, o intervalo <b>[Lp(i), Rp(i)] </b>na sequência a é alterado para <b>wi</b>. É garantido que todo servidor está coberto por pelo menos um intervalo.</span></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">Você precisa determinar o número total de configurações distintas possíveis para <b>a</b> após todas as modificações. </span></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">O resultado deve ser impresso módulo <b>998244353</b>.</span></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">Explicação da entrada: </span></p><p dir="ltr"></p><p dir="ltr" style="color: rgb(147, 149, 152);background-color: rgb(255, 255, 255);"><span style="color: rgb(0, 0, 0);background-color: transparent;">5 5 2</span></p><p dir="ltr" style="color: rgb(147, 149, 152);background-color: rgb(255, 255, 255);"><span style="color: rgb(0, 0, 0);background-color: transparent;">1 3</span></p><p dir="ltr" style="color: rgb(147, 149, 152);background-color: rgb(255, 255, 255);"><span style="color: rgb(0, 0, 0);background-color: transparent;">2 2</span></p><p dir="ltr" style="color: rgb(147, 149, 152);background-color: rgb(255, 255, 255);"><span style="color: rgb(0, 0, 0);background-color: transparent;">3 3</span></p><p dir="ltr" style="color: rgb(147, 149, 152);background-color: rgb(255, 255, 255);"><span style="color: rgb(0, 0, 0);background-color: transparent;">1 5</span></p><p dir="ltr" style="color: rgb(147, 149, 152);background-color: rgb(255, 255, 255);"><span style="color: rgb(0, 0, 0);background-color: transparent;">3 5</span></p><p></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">Existem 16 sequências distintas que podem ser alcançadas. Por exemplo, a sequência <b>a = (2, 1, 1, 1, 1) </b>pode ser obtida da seguinte maneira:</span></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">Escolha </span><span style="color: #000000;background-color: transparent;">p = (4, 1, 2, 3, 5)</span><span style="color: #000000;background-color: transparent;"> e </span><span style="color: #000000;background-color: transparent;">w = (1, 2, 1, 2, 1).</span></p><ol><li dir="ltr" style="color: #000000;background-color: transparent;"><p dir="ltr"><span style="color: #000000;background-color: transparent;">A 1ª operação modifica a para (1, 1, 1, 1, 1).</span></p></li><li dir="ltr" style="color: #000000;background-color: transparent;"><p dir="ltr"><span style="color: #000000;background-color: transparent;">A 2ª operação modifica a para (2, 2, 2, 1, 1).</span></p></li><li dir="ltr" style="color: #000000;background-color: transparent;"><p dir="ltr"><span style="color: #000000;background-color: transparent;">A 3ª operação modifica a para (2, 1, 2, 1, 1).</span></p></li><li dir="ltr" style="color: #000000;background-color: transparent;"><p dir="ltr"><span style="color: #000000;background-color: transparent;">A 4ª operação modifica a para (2, 1, 2, 1, 1) (sem alterações adicionais).</span></p></li><li dir="ltr" style="color: #000000;background-color: transparent;"><p dir="ltr"><span style="color: #000000;background-color: transparent;">A 5ª operação modifica a para (2, 1, 1, 1, 1).</span></p></li></ol><br/><p></p>
Formato da entrada: <p></p><p dir="ltr"><span style="color: rgb(0, 0, 0);background-color: transparent;">A primeira linha contém três inteiros <b>N, M</b> e <b>C </b><b>(1 ≤ N ≤ 100, 1 ≤ M ≤ 2 * N * (N + 1), 1 ≤ C &lt; 998244353).</b></span></p><p></p><p></p><p dir="ltr"><span style="color: rgb(0, 0, 0);background-color: transparent;">As próximas<span> </span></span><span style="color: rgb(0, 0, 0);background-color: transparent;">M</span><span style="color: rgb(0, 0, 0);background-color: transparent;"><span> </span>linhas contêm dois inteiros <b>Li </b>e<b> Ri</b> <b>(1 ≤ Li ≤ Ri ≤ N)</b>, representando os limites do intervalo<b> [Li, Ri]</b>. É garantido que (<b>Li, Ri) ≠ (Lj, Rj) para i ≠ j.</b></span></p><p></p>
Formato da saída: <p dir="ltr" style="color: rgb(147, 149, 152);background-color: rgb(255, 255, 255);"><span style="background-color: transparent;color: rgb(0, 0, 0);">Imprima um único inteiro, o número total de configurações distintas de a, módulo <b>998244353</b>.</span><br/></p>
