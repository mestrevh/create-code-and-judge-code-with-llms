Título: A Floresta de Binágoras
Topicos do problema: Árvore; 
Tempo limite de execução: 1 segundo(s)
Descrição: <p>O filósofo Binágoras tem uma floresta onde cada uma das árvores é formada por números (sendo esse o possível segredo da Escola Binagórica). Cada discípulo deve ter uma árvore binária nessa floresta e sua árvore depende das dos discípulos mais velhos. Gabi é a mais nova pupila de Binágoras e é dever dela plantar nessa floresta a sua própria árvore. Essa nova árvore deve ser uma árvore de busca binária e, para ser construída, a discípula deve analisar cada uma das outras árvores da floresta da seguinte forma:<br/><br/>- Se Gabi encontrar uma árvore que seja de busca binária (BST), ela deve pegar o menor número dessa árvore e adicioná-lo à sua, se esse valor ainda não foi adicionado;<br/><br/>- Se Gabi encontrar uma árvore que não seja de busca binária (apenas uma BT), ela deve remover o valor da raiz da árvore binária encontrada de sua árvore, se esse valor estiver lá;<br/><br/>A nova árvore começa vazia.<br/><br/>O algoritmo usado pela discípula para construir sua árvore deve avaliar cada árvore mostrada para identificar se é uma árvore de busca binária (BST) ou não e, a partir disso, tomar uma das ações acima.<br/></p>
Formato da entrada: <p>A entrada contém uma string s(T) por linha, representando uma árvore binária T da forma descrita abaixo. A leitura deve ser feita até o fim da entrada.<br/><br/>- s(T) = (), se T = vazia, onde T é a árvore binária;<br/>- s(T) = (V:s(TL)s(TR)) se T é uma BT com raiz cujo valor é V e subárvores TL (à esquerda) e TR (à direita);<br/><br/></p>
Formato da saída: <p>A saída deve conter todos os elementos da árvore BST de Gabi, sendo um por linha, listados usando um percurso em pós-ordem.<br/><br/></p>
