Título: Equalizando Torres
Topicos do problema: acumulador; repetição; 
Tempo limite de execução: 1 segundo(s)
Descrição: <p>Ambrósio está se divertindo muito com seu novo jogo, o Equalizador de Torres. O jogo consiste de várias rodadas. Em cada rodada são dadas várias torres de tamanhos variados onde cada uma tem um custo especifico para ser alterada (aumentada ou diminuída em 1) e o objetivo do jogo é que no fim todas as torres tenham a mesma altura.</p><p>Ambrósio deseja ser melhor nesse jogo e então ele pediu que você o ajudasse. Para isso, você deve construir um programa que responda, para cada rodada, do jogo qual o <b>menor custo total</b> para que todas as torres acabem com a mesma altura.</p><p>Exemplo: Numa rodada com 3 torres, com alturas: {1, 3, 4} e custos respectivos: {10, 1000, 100}. O menor custo total é 120, onde você deve adicionar 2 na primeira torre (gastando 20) e reduzir 1 na terceira torre (gastando 100) de forma que todas as torres acabam com 3 de altura.</p>
Formato da entrada: <p>Uma linha contendo um inteiro <b>N</b> representando o número de casos de teste a entrada possui, seguida pelos <b>N</b> casos de teste.</p><p>Cada caso de teste começa com uma linha com um inteiro <b>T</b> representando o número de Torres dessa rodada.</p><p>Seguida por uma linha com <b>T</b> inteiros representando as alturas de cada uma das respectivas torres.</p><p>Seguida por uma linha com <b>T</b> inteiros representando os custos para alterar cada uma das respectivas torres.</p><p>1 &lt;= <b>N</b> &lt;= 100</p><p>3 &lt;= <b>T</b> &lt;= 20</p><p>1 &lt;= <b>Alturas</b> &lt;= 100</p><p>1 &lt;= <b>Custos</b> &lt;= 1000</p><p><br/></p>
Formato da saída: <p><b>N</b> linhas cada uma contendo o menor custo para equalizar as torres da <b>N</b>-ésima rodada.</p>
