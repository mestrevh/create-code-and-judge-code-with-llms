Título: Labirinto 3D
Topicos do problema: backtracking; recursão; 
Tempo limite de execução: 1 segundo(s)
Descrição: <p>Resolva o Labirinto 3D! Sim, 3D. Uma forma de visualiza-los é fatiar cada plano. Então, um labirinto 3D pode ser visto como uma série de labirintos 2D conectados um atrás do outro. Sabendo isso, faça um programa que imprima os movimentos necessários para sair do canto superior esquerdo do primeiro plano e chegar no canto inferior direito do último plano.</p><p>Como de costume, '.' são caminhos livres, e '#' são paredes.</p><p>Os movimentos são: 'U' - Up, 'D' - Down, 'B' - Back, 'F' - Front, 'L' - Left, 'R' - Right.<br/>(Note que 'F': significa que você vai para mesma linha e coluna do plano seguinte; e 'B': significa que você vai para mesma linha e coluna do plano anterior)<br/>(Sempre é possível sair do labirinto)</p><p style="text-align: center;"><img src="https://www.thehuxley.com/api/v1/problems/image/8ac50ca3ff93506c61b52c84bb07a64e63a139dfd.png"/> <span style="text-align: center;">Exemplo do primeiro caso de teste (https://www.remix3d.com/details/G009SVKLGJ51)</span></p>
Formato da entrada: <p>A primeira linha de entrada irá conter três inteiros <b>Z</b>, <b>Y</b>, <b>X</b> , representando a quantidade de planos, linhas e colunas (de cada plano), respectivamente.</p><p>Em seguida, seguirão<b> Z</b> planos, cada plano é separado por uma quebra de linha, e são formados por<b> Y</b> linhas, onde cada linhas contém<b> X</b> caracteres.<br/></p><p>1 &lt;= Z, Y, X &lt;= 69.</p>
Formato da saída: <p>A saída deverá conter um inteiro<b> M</b> representando a quantidade de movimentos necessários para sair do labirinto.</p><p>Em seguida deverá conter<b> M</b> movimentos para saída do labirinto.</p><p>Formato: &#34;M1 -&gt; M2 -&gt; ... -&gt; MM&#34;.<br/></p>
