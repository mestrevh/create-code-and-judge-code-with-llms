Título: MP IP-EC 2019.1
Topicos do problema: array; ordenação; 
Tempo limite de execução: 1 segundo(s)
Descrição: <title></title><p>A linguagem de programação C não é um tipo de dados próprio para armazenar um <b>conjunto</b> de dados, do mesmo modo que o tipo<b> booleano</b> não existe explicitamente em C. Mas podemos simular um conjunto através de um vetor, apesar de vetores permitirem repetição de elementos e estarem ordenados, algo que não faz sentido em conjuntos. Um matemático gostaria de ter um programa em C que calculasse a interseção entre dois conjuntos (de números naturais), lidos e armazenados como dois vetores independentes (de tamanho máximo 100). Ele deseja que o conjunto interseção seja um terceiro vetor, de tal forma que ele possa verificar manualmente se o programa fez a tarefa corretamente. Seu programa deve ler 2 vetores, onde o critério de parada da leitura é um número negativo, admitindo repetição na entrada mas com armazenamento não repetido. Ao final, seu programa deve apresentar os 2 vetores lidos na entrada (sem repetição) e o vetor interseção resultante. Para facilitar a visualização do resultados, todos os vetores devem ser apresentados em ordem crescente (ordenados).</p>
Formato da entrada: <p>Vocẽ receberá duas listas com <b>N</b> inteiros <b>(1 &lt;= N &lt;= 100)</b>, onde quando o N-ésimo número digitado for negativo <b>(&lt; 0)</b> vocẽ deve parar a leitura e ir para a próxima lista, caso ainda esteja na primeira.<br/></p>
Formato da saída: <p>Você deverá printar os dois vetores de forma ordenada, além de printar também a intersecção de ambos de forma ordenada.<br/></p>
